For this assignment, I first started by modifying the lexer file. For true and false, I assigned them 0 and 1, respectively. I also assigned 0 to null. For all numbers (including base 10, 16, 8, and 2) I assigned each number its respective value based on its base. For characters, I assigned the character its ASCII value. Strings were a bit tougher. I had to iterate through the entire string in order to retain its value. Originally I was only printing out only " because I was not iterating through the entire string, I was only considering the first character of them.

For the parser, I implemented it from the top down. For example, I started with programs, then procedures, then parameters, and so on.  I found that implementing it from the top down made it easier to test. Most of the effort involved in this project was due to providing the constructors with the correct parameters and knowing when to construct new objects. At first, I struggled with the concept of knowing when to call new. I also had trouble with reassigning the current pointer when something other than the current pointer was used. After I figured out that this was necessary, I stopped getting segmentation faults. Lastly, I had to change all of my push_back calls to push_front calls because I was printing out the tree incorrectly. I was printing all of the correct nodes, but not in the correct order.
